// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using s27400_APBD_Project.Entities;

#nullable disable

namespace s27400_APBD_Project.Migrations
{
    [DbContext(typeof(SoftwareDbContext))]
    partial class SoftwareDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductDiscount", b =>
                {
                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<int>("SoftwareSystemsSoftwareId")
                        .HasColumnType("int");

                    b.HasKey("DiscountId", "SoftwareSystemsSoftwareId");

                    b.HasIndex("SoftwareSystemsSoftwareId");

                    b.ToTable("ProductDiscount");

                    b.HasData(
                        new
                        {
                            DiscountId = 1,
                            SoftwareSystemsSoftwareId = 1
                        },
                        new
                        {
                            DiscountId = 1,
                            SoftwareSystemsSoftwareId = 2
                        },
                        new
                        {
                            DiscountId = 1,
                            SoftwareSystemsSoftwareId = 3
                        },
                        new
                        {
                            DiscountId = 2,
                            SoftwareSystemsSoftwareId = 1
                        },
                        new
                        {
                            DiscountId = 2,
                            SoftwareSystemsSoftwareId = 2
                        },
                        new
                        {
                            DiscountId = 2,
                            SoftwareSystemsSoftwareId = 3
                        },
                        new
                        {
                            DiscountId = 3,
                            SoftwareSystemsSoftwareId = 1
                        },
                        new
                        {
                            DiscountId = 3,
                            SoftwareSystemsSoftwareId = 2
                        },
                        new
                        {
                            DiscountId = 3,
                            SoftwareSystemsSoftwareId = 3
                        });
                });

            modelBuilder.Entity("s27400_APBD_Project.Entities.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PESEL")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ClientId")
                        .HasName("ClientId");

                    b.ToTable("Client", (string)null);

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            Email = "anna.kowalska@example.com",
                            IsDeleted = false,
                            Name = "Anna",
                            PESEL = "84051412345",
                            PhoneNumber = "600123456",
                            Surname = "Kowalska"
                        },
                        new
                        {
                            ClientId = 2,
                            Email = "piotr.nowak@example.com",
                            IsDeleted = false,
                            Name = "Piotr",
                            PESEL = "92071823456",
                            PhoneNumber = "601234567",
                            Surname = "Nowak"
                        },
                        new
                        {
                            ClientId = 3,
                            Email = "katarzyna.wisniewska@example.com",
                            IsDeleted = false,
                            Name = "Katarzyna",
                            PESEL = "78090234567",
                            PhoneNumber = "602345678",
                            Surname = "Wiśniewska"
                        },
                        new
                        {
                            ClientId = 4,
                            Email = "marek.zielinski@example.com",
                            IsDeleted = false,
                            Name = "Marek",
                            PESEL = "86031945678",
                            PhoneNumber = "603456789",
                            Surname = "Zieliński"
                        });
                });

            modelBuilder.Entity("s27400_APBD_Project.Entities.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("KRS")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("CompanyId")
                        .HasName("CompanyId");

                    b.ToTable("Company", (string)null);

                    b.HasData(
                        new
                        {
                            CompanyId = 1,
                            Address = "ul. Miodowa 10, 00-251 Warszawa",
                            Email = "kontakt@techsolutions.pl",
                            KRS = "0000456789",
                            Name = "TechSolutions Sp. z o.o.",
                            PhoneNumber = "221234567"
                        },
                        new
                        {
                            CompanyId = 2,
                            Address = "ul. Zielona 15, 30-001 Kraków",
                            Email = "info@greenenergy.pl",
                            KRS = "0000567890",
                            Name = "GreenEnergy Polska S.A.",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            CompanyId = 3,
                            Address = "ul. Kwiatowa 22, 60-101 Poznań",
                            Email = "biuro@webdesignexperts.pl",
                            KRS = "0000678901",
                            Name = "WebDesign Experts Sp. z o.o.",
                            PhoneNumber = "612345678"
                        },
                        new
                        {
                            CompanyId = 4,
                            Address = "ul. Transportowa 5, 40-002 Katowice",
                            Email = "office@smartlogistics.pl",
                            KRS = "0000789012",
                            Name = "SmartLogistics S.A.",
                            PhoneNumber = "324567890"
                        });
                });

            modelBuilder.Entity("s27400_APBD_Project.Entities.Contract", b =>
                {
                    b.Property<int>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractId"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StateFK")
                        .HasColumnType("int");

                    b.HasKey("ContractId")
                        .HasName("ContractId");

                    b.HasIndex("StateFK");

                    b.ToTable("Contract", (string)null);

                    b.HasData(
                        new
                        {
                            ContractId = 1,
                            EndDate = new DateTime(2022, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 8000.01m,
                            StartDate = new DateTime(2022, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StateFK = 2
                        },
                        new
                        {
                            ContractId = 2,
                            EndDate = new DateTime(2022, 12, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 5000.11m,
                            StartDate = new DateTime(2022, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StateFK = 3
                        },
                        new
                        {
                            ContractId = 3,
                            EndDate = new DateTime(2022, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 9000.11m,
                            StartDate = new DateTime(2022, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StateFK = 2
                        },
                        new
                        {
                            ContractId = 4,
                            EndDate = new DateTime(2023, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 4000.01m,
                            StartDate = new DateTime(2023, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StateFK = 3
                        });
                });

            modelBuilder.Entity("s27400_APBD_Project.Entities.ContractSoftware", b =>
                {
                    b.Property<int>("ContractSoftwareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractSoftwareId"));

                    b.Property<int>("ContractFK")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceInContract")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.Property<int>("SoftwareSystemFK")
                        .HasColumnType("int");

                    b.Property<int>("UpdateTime")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ContractSoftwareId")
                        .HasName("ContractSoftwareId");

                    b.HasIndex("ContractFK");

                    b.HasIndex("SoftwareSystemFK");

                    b.ToTable("ContractSoftware", (string)null);

                    b.HasData(
                        new
                        {
                            ContractSoftwareId = 1,
                            ContractFK = 1,
                            PriceInContract = 4000.01m,
                            SoftwareSystemFK = 1,
                            UpdateTime = 1,
                            Version = "1.0"
                        },
                        new
                        {
                            ContractSoftwareId = 2,
                            ContractFK = 1,
                            PriceInContract = 4000.00m,
                            SoftwareSystemFK = 2,
                            UpdateTime = 1,
                            Version = "build 2.0"
                        },
                        new
                        {
                            ContractSoftwareId = 3,
                            ContractFK = 2,
                            PriceInContract = 4000.01m,
                            SoftwareSystemFK = 1,
                            UpdateTime = 1,
                            Version = "1.0"
                        },
                        new
                        {
                            ContractSoftwareId = 4,
                            ContractFK = 2,
                            PriceInContract = 1000.10m,
                            SoftwareSystemFK = 3,
                            UpdateTime = 1,
                            Version = "2.21"
                        },
                        new
                        {
                            ContractSoftwareId = 5,
                            ContractFK = 3,
                            PriceInContract = 4000.01m,
                            SoftwareSystemFK = 1,
                            UpdateTime = 1,
                            Version = "1.1"
                        },
                        new
                        {
                            ContractSoftwareId = 6,
                            ContractFK = 3,
                            PriceInContract = 4000.00m,
                            SoftwareSystemFK = 2,
                            UpdateTime = 1,
                            Version = "build 2.1"
                        },
                        new
                        {
                            ContractSoftwareId = 7,
                            ContractFK = 3,
                            PriceInContract = 1000.10m,
                            SoftwareSystemFK = 3,
                            UpdateTime = 1,
                            Version = "2.73"
                        },
                        new
                        {
                            ContractSoftwareId = 8,
                            ContractFK = 4,
                            PriceInContract = 4000.01m,
                            SoftwareSystemFK = 1,
                            UpdateTime = 1,
                            Version = "1.1"
                        });
                });

            modelBuilder.Entity("s27400_APBD_Project.Entities.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountId"));

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Offer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("DiscountId")
                        .HasName("DiscountId");

                    b.ToTable("Discount", (string)null);

                    b.HasData(
                        new
                        {
                            DiscountId = 1,
                            DateEnd = new DateTime(2023, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateStart = new DateTime(2023, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Wakacje 2023",
                            Offer = "Wszystko",
                            Value = 15
                        },
                        new
                        {
                            DiscountId = 2,
                            DateEnd = new DateTime(2024, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateStart = new DateTime(2024, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Wakacje 2024",
                            Offer = "Wszystko",
                            Value = 10
                        },
                        new
                        {
                            DiscountId = 3,
                            DateEnd = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateStart = new DateTime(2024, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Black Friday 2024",
                            Offer = "Wszystko",
                            Value = 20
                        });
                });

            modelBuilder.Entity("s27400_APBD_Project.Entities.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<int?>("ClientFK")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyFK")
                        .HasColumnType("int");

                    b.Property<int>("ContractFK")
                        .HasColumnType("int");

                    b.Property<decimal>("ValuePaid")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("PaymentId")
                        .HasName("PaymentId");

                    b.HasIndex("ClientFK");

                    b.HasIndex("CompanyFK");

                    b.HasIndex("ContractFK");

                    b.ToTable("Payment", (string)null);

                    b.HasData(
                        new
                        {
                            PaymentId = 1,
                            ClientFK = 1,
                            ContractFK = 1,
                            ValuePaid = 8000.01m
                        },
                        new
                        {
                            PaymentId = 2,
                            ClientFK = 3,
                            ContractFK = 2,
                            ValuePaid = 100.00m
                        },
                        new
                        {
                            PaymentId = 3,
                            CompanyFK = 1,
                            ContractFK = 3,
                            ValuePaid = 9000.11m
                        },
                        new
                        {
                            PaymentId = 4,
                            CompanyFK = 2,
                            ContractFK = 4,
                            ValuePaid = 400.01m
                        });
                });

            modelBuilder.Entity("s27400_APBD_Project.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("RoleId")
                        .HasName("RoleId");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Name = "Standard"
                        },
                        new
                        {
                            RoleId = 2,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("s27400_APBD_Project.Entities.SoftwareCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("CategoryId")
                        .HasName("CategoryId");

                    b.ToTable("SoftwareCategory", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Edukacja"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Finanse"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Rozrywka"
                        });
                });

            modelBuilder.Entity("s27400_APBD_Project.Entities.SoftwareSystem", b =>
                {
                    b.Property<int>("SoftwareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoftwareId"));

                    b.Property<int>("CategoryFK")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal>("Price")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SoftwareId")
                        .HasName("SoftwareId");

                    b.HasIndex("CategoryFK");

                    b.ToTable("SoftwareSystem", (string)null);

                    b.HasData(
                        new
                        {
                            SoftwareId = 1,
                            CategoryFK = 2,
                            Description = "Description Rachunki",
                            Name = "Rachunki",
                            Price = 4000.01m,
                            Version = "1.9"
                        },
                        new
                        {
                            SoftwareId = 2,
                            CategoryFK = 1,
                            Description = "Description Nauczanie",
                            Name = "Nauczanie",
                            Price = 4000.00m,
                            Version = "build 2.20"
                        },
                        new
                        {
                            SoftwareId = 3,
                            CategoryFK = 3,
                            Description = "Description Filmy",
                            Name = "Filmy",
                            Price = 1000.10m,
                            Version = "2.92"
                        });
                });

            modelBuilder.Entity("s27400_APBD_Project.Entities.State", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("StateId")
                        .HasName("StateId");

                    b.ToTable("State", (string)null);

                    b.HasData(
                        new
                        {
                            StateId = 1,
                            Name = "Oczekujace"
                        },
                        new
                        {
                            StateId = 2,
                            Name = "Oplacone"
                        },
                        new
                        {
                            StateId = 3,
                            Name = "Anulowane"
                        });
                });

            modelBuilder.Entity("s27400_APBD_Project.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("DueDateRefreshToken")
                        .HasColumnType("datetime2");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleFK")
                        .HasColumnType("int");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId")
                        .HasName("UserId");

                    b.HasIndex("RoleFK");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("ProductDiscount", b =>
                {
                    b.HasOne("s27400_APBD_Project.Entities.Discount", null)
                        .WithMany()
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("s27400_APBD_Project.Entities.SoftwareSystem", null)
                        .WithMany()
                        .HasForeignKey("SoftwareSystemsSoftwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("s27400_APBD_Project.Entities.Contract", b =>
                {
                    b.HasOne("s27400_APBD_Project.Entities.State", "StateNavigation")
                        .WithMany("Contracts")
                        .HasForeignKey("StateFK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("StateNavigation");
                });

            modelBuilder.Entity("s27400_APBD_Project.Entities.ContractSoftware", b =>
                {
                    b.HasOne("s27400_APBD_Project.Entities.Contract", "ContractNavigation")
                        .WithMany("ContractSoftwares")
                        .HasForeignKey("ContractFK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("s27400_APBD_Project.Entities.SoftwareSystem", "SoftwareSystemNavigation")
                        .WithMany("ContractSoftwares")
                        .HasForeignKey("SoftwareSystemFK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ContractNavigation");

                    b.Navigation("SoftwareSystemNavigation");
                });

            modelBuilder.Entity("s27400_APBD_Project.Entities.Payment", b =>
                {
                    b.HasOne("s27400_APBD_Project.Entities.Client", "ClientNavigation")
                        .WithMany("Payments")
                        .HasForeignKey("ClientFK")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("s27400_APBD_Project.Entities.Company", "CompanyNavigation")
                        .WithMany("Payments")
                        .HasForeignKey("CompanyFK")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("s27400_APBD_Project.Entities.Contract", "ContractNavigation")
                        .WithMany("Payments")
                        .HasForeignKey("ContractFK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ClientNavigation");

                    b.Navigation("CompanyNavigation");

                    b.Navigation("ContractNavigation");
                });

            modelBuilder.Entity("s27400_APBD_Project.Entities.SoftwareSystem", b =>
                {
                    b.HasOne("s27400_APBD_Project.Entities.SoftwareCategory", "SoftwareCategoryNavigation")
                        .WithMany("SoftwareSystems")
                        .HasForeignKey("CategoryFK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SoftwareCategoryNavigation");
                });

            modelBuilder.Entity("s27400_APBD_Project.Entities.User", b =>
                {
                    b.HasOne("s27400_APBD_Project.Entities.Role", "RoleNavigation")
                        .WithMany("Users")
                        .HasForeignKey("RoleFK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RoleNavigation");
                });

            modelBuilder.Entity("s27400_APBD_Project.Entities.Client", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("s27400_APBD_Project.Entities.Company", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("s27400_APBD_Project.Entities.Contract", b =>
                {
                    b.Navigation("ContractSoftwares");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("s27400_APBD_Project.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("s27400_APBD_Project.Entities.SoftwareCategory", b =>
                {
                    b.Navigation("SoftwareSystems");
                });

            modelBuilder.Entity("s27400_APBD_Project.Entities.SoftwareSystem", b =>
                {
                    b.Navigation("ContractSoftwares");
                });

            modelBuilder.Entity("s27400_APBD_Project.Entities.State", b =>
                {
                    b.Navigation("Contracts");
                });
#pragma warning restore 612, 618
        }
    }
}
